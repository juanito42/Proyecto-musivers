security:
    enable_authenticator_manager: true

    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        register:
            pattern: ^/api/register
            stateless: true
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api/
            stateless: true
            provider: app_user_provider
            jwt: ~  # Este es el firewall para proteger las rutas de la API

    access_control:
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/events, roles: ROLE_USER }
        - { path: ^/api/forums, roles: ROLE_USER }
        - { path: ^/api/profile, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/grupos-rock, roles: ROLE_USER  }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
